### APPENDERS  ###
appenders = logs

# File based rollover for logs
appender.logs.name = GeneralRollingFileAppender
appender.logs.type = RollingFile
appender.logs.fileName = /tmp/logs/general-daily.log
appender.logs.filePattern = /tmp/logs/general-%d{yy-MM-dd}.log
appender.logs.layout.type = PatternLayout
appender.logs.layout.pattern = %d{yyyy-MM-dd HH:mm:ss} %-5p %c{1}:%L - %m%n
appender.logs.policies.type = Policies
appender.logs.policies.time.type = TimeBasedTriggeringPolicy
appender.logs.policies.time.interval = 1
appender.logs.policies.time.modulate = true

### LOGGERS  ###
loggers = logs

# General logger
logger.logs.name = org.apache.spark
logger.logs.level = debug
logger.logs.additivity = false
logger.logs.appenderRef.rolling.ref = GeneralRollingFileAppender

# SPARK-9183: Settings to avoid annoying messages when looking up nonexistent UDFs in SparkSQL with Hive support
logger.logs.org.apache.hadoop.hive.metastore.RetryingHMSHandler=FATAL
logger.logs.org.apache.hadoop.hive.ql.exec.FunctionRegistry=ERROR

# Set the default spark-shell log level to WARN. When running the spark-shell, the
# log level for this class is used to overwrite the root logger's log level, so that
# the user can have different defaults for the shell and regular Spark apps.
logger.logs.org.apache.spark.repl.Main=WARN

# Settings to quiet third party logs that are too verbose
logger.logs.org.spark_project.jetty=WARN
logger.logs.org.spark_project.jetty.util.component.AbstractLifeCycle=ERROR
logger.logs.org.apache.spark.repl.SparkIMain$exprTyper=INFO
logger.logs.org.apache.spark.repl.SparkILoop$SparkILoopInterpreter=INFO
logger.logs.org.apache.parquet=ERROR
logger.logs.parquet=ERROR